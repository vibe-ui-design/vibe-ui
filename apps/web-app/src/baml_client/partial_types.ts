/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  CodeQuality,  CodeQualityMetrics,  ComprehensiveAnalysis,  ContributorStats,  Feature,  FileChange,  FileSummary,  ImpactAssessment,  KnowledgeInsight,  Link,  References,  Summary,  TeamContribution,  TeamProgress,  TechnicalDebt,  TechnicalImpact } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
    value: T
    state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    
    export interface CodeQuality {
        strengths?: (string | null)[]
        concerns?: (string | null)[]
        metrics?: (partial_types.CodeQualityMetrics | null)
    }
    
    export interface CodeQualityMetrics {
        testCoverage?: (string | null)
        complexity?: (string | null)
        maintainability?: (string | null)
    }
    
    export interface ComprehensiveAnalysis {
        summary?: (partial_types.Summary | null)
        impact?: (partial_types.TechnicalImpact | null)
        team?: (partial_types.TeamProgress | null)
        references?: (partial_types.References | null)
    }
    
    export interface ContributorStats {
        commitCount?: (number | null)
        filesChanged?: (number | null)
        insertions?: (number | null)
        deletions?: (number | null)
    }
    
    export interface Feature {
        name?: (string | null)
        status?: ("completed" | "in-progress" | "planned" | null)
        changes?: (string | null)[]
        impact?: (partial_types.ImpactAssessment | null)
    }
    
    export interface FileChange {
        path?: (string | null)
        content?: (string | null)
        insertions?: (number | null)
        deletions?: (number | null)
        changeType?: ("added" | "modified" | "deleted" | null)
        language?: (string | null)
    }
    
    export interface FileSummary {
        summary?: (string | null)
        changes?: (string | null)[]
        technicalNotes?: (string | null)[]
        impact?: (partial_types.ImpactAssessment | null)
        technicalDebt?: (partial_types.TechnicalDebt | null)[]
        knowledgeInsights?: (partial_types.KnowledgeInsight | null)[]
        links?: (partial_types.Link | null)[]
    }
    
    export interface ImpactAssessment {
        level?: ("low" | "medium" | "high" | null)
        scope?: ("local" | "module" | "system-wide" | null)
        affectedComponents?: (string | null)[]
        risks?: (string | null)[]
        mitigations?: (string | null)[]
    }
    
    export interface KnowledgeInsight {
        type?: ("documentation" | "best-practices" | "patterns" | "learnings" | "dependencies" | null)
        description?: (string | null)
        actionItems?: (string | null)[]
    }
    
    export interface Link {
        type?: ("pr" | "issue" | "doc" | "external" | null)
        url?: (string | null)
        title?: (string | null)
        context?: (string | null)
    }
    
    export interface References {
        prs?: (partial_types.Link | null)[]
        issues?: (partial_types.Link | null)[]
        docs?: (partial_types.Link | null)[]
    }
    
    export interface Summary {
        title?: (string | null)
        description?: (string | null)
        highlights?: (string | null)[]
    }
    
    export interface TeamContribution {
        author?: (string | null)
        stats?: (partial_types.ContributorStats | null)
        impactLevel?: ("low" | "medium" | "high" | null)
    }
    
    export interface TeamProgress {
        contributors?: (partial_types.TeamContribution | null)[]
        collaboration?: (partial_types.KnowledgeInsight | null)[]
    }
    
    export interface TechnicalDebt {
        description?: (string | null)
        severity?: ("low" | "medium" | "high" | null)
        type?: ("code-quality" | "testing" | "documentation" | "security" | "performance" | "maintainability" | null)
        suggestedFix?: (string | null)
    }
    
    export interface TechnicalImpact {
        features?: (partial_types.Feature | null)[]
        technicalDebt?: (partial_types.TechnicalDebt | null)[]
        codeQuality?: (partial_types.CodeQuality | null)
    }
    
}